name: Validate Supabase Questions

on:
  push:            { branches: [main] }
  pull_request:    { branches: [main] }
  workflow_dispatch:
  schedule: [ { cron: '0 5 * * *' } ]

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      SUPABASE_SERVICE_KEY:  ${{ secrets.SUPABASE_SERVICE_KEY }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      DEEPSEEK_API_KEY:      ${{ secrets.DEEPSEEK_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Instalar dependências com npm
        run: |
          # Usar npm em vez de pnpm para maior compatibilidade
          npm ci
          
          # Garantir que temos typescript e ts-node instalados
          npm install -g typescript ts-node
      
      - name: 🧪 Executar script de validação
        run: |
          # Gerar arquivo JavaScript temporário
          echo "// Script auxiliar para contornar limitações de importação ESM" > run.mjs
          echo "import { execSync } from 'child_process';" >> run.mjs
          echo "try {" >> run.mjs
          echo "  console.log('Executando validação de questões...');" >> run.mjs
          echo "  execSync('npx ts-node scripts/validateQuestions.ts', { stdio: 'inherit' });" >> run.mjs
          echo "} catch (error) {" >> run.mjs
          echo "  console.error('Erro durante a validação:', error);" >> run.mjs
          echo "  process.exit(1);" >> run.mjs
          echo "}" >> run.mjs
          
          # Executar o script auxiliar
          node run.mjs
        
      - name: 📝 Criar arquivo de log vazio se não existir
        if: always()
        run: touch audit.log

      - if: always()
        uses: actions/upload-artifact@v4
        with:
          name: audit-log
          path: audit.log
          retention-days: 30