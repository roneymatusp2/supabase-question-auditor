name: Validate Supabase Questions

on:
  push:            { branches: [main] }
  pull_request:    { branches: [main] }
  workflow_dispatch:
  schedule: [ { cron: '0 5 * * *' } ]

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      SUPABASE_SERVICE_KEY:  ${{ secrets.SUPABASE_SERVICE_KEY }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      DEEPSEEK_API_KEY:      ${{ secrets.DEEPSEEK_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: 🧹 Limpar caches e verificar ambiente
        run: |
          echo "Versão do Node: $(node -v)"
          echo "Versão do NPM: $(npm -v)"
          
          # Limpar cache do npm que pode conter pacotes corrompidos
          npm cache clean --force
          
          # Configurar npm para ignorar verificações de integridade opcionais
          npm config set strict-ssl false
          
          # Usar mirror alternativo (mais estável para CI)
          npm config set registry https://registry.npmjs.org/

      - name: 📦 Instalar dependências de forma robusta
        run: |
          # Verificar se já existe package-lock.json
          if [ -f "package-lock.json" ]; then
            echo "Removendo package-lock.json existente..."
            rm -f package-lock.json
          fi
          
          # Instalação com retry automático
          for i in {1..3}; do
            echo "Tentativa $i de instalação..."
            npm install && break || {
              echo "Falha na tentativa $i"
              if [ $i -lt 3 ]; then
                echo "Limpando node_modules e tentando novamente..."
                rm -rf node_modules
                sleep 5
              else
                echo "Falha após 3 tentativas, encerrando."
                exit 1
              fi
            }
          done
          
          # Verificar instalação de ts-node
          if ! npm list ts-node; then
            echo "Instalando ts-node explicitamente..."
            npm install -g ts-node typescript
          fi

      - name: 🧪 Executar script de validação
        run: |
          # Criar um arquivo JavaScript básico para executar o script TypeScript
          cat > run-validation.js << 'EOF'
          const { execSync } = require('child_process');
          
          try {
            console.log('Executando validação com Node.js...');
            execSync('node --require ts-node/register scripts/validateQuestions.ts', { stdio: 'inherit' });
          } catch (error) {
            console.error('Erro durante execução:', error);
            process.exit(1);
          }
          EOF
          
          # Executar o arquivo JavaScript
          node run-validation.js
        
      - name: 📝 Criar arquivo de log
        if: always()
        run: touch audit.log

      - name: 📤 Upload de artefatos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: audit-log
          path: audit.log
          retention-days: 30