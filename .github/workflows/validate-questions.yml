name: Validate Supabase Questions

on:
  push:            { branches: [ main ] }
  pull_request:    { branches: [ main ] }
  workflow_dispatch:
  schedule: [ { cron: '0 5 * * *' } ]

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      SUPABASE_URL: https://gjvtncdjcslnkfctqnfy.supabase.co
      SUPABASE_SERVICE_KEY:   ${{ secrets.SUPABASE_SERVICE_KEY }}
      SUPABASE_ACCESS_TOKEN:  ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      DEEPSEEK_API_KEY:       ${{ secrets.DEEPSEEK_API_KEY }}

    steps:
      # 1 ‚ñ∏ C√≥digo
      - uses: actions/checkout@v4

      # 2 ‚ñ∏ Node 20
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'          # habilita cache do pnpm store

      # 3 ‚ñ∏ pnpm (instala√ß√£o + install)
      - name: üì¶ Install deps via pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9              # √∫ltima LTS
          run_install: |
            args: [
              --frozen-lockfile,
              --registry=https://registry.npmmirror.com/   # mirror r√°pido
            ]

      # 4 ‚ñ∏ Supabase CLI
      - name: üõ†Ô∏è  Supabase CLI
        run: |
          curl -sL https://github.com/supabase/cli/releases/download/v1.158.4/supabase_1.158.4_linux_amd64.deb -o sb.deb
          sudo dpkg -i sb.deb

      - name: üîê Supabase login
        run: supabase login --access-token "$SUPABASE_ACCESS_TOKEN"

      # 5 ‚ñ∏ Script (pnpm dlx = npx do pnpm)
      - name: üßê Run audit script
        run: pnpm dlx ts-node scripts/validateQuestions.ts

      # 6 ‚ñ∏ Artefato
      - name: üì§ Upload audit log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: audit-log
          path: audit.log
          retention-days: 30
