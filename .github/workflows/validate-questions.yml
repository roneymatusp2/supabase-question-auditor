name: Validate Supabase Questions

on:
  push:            { branches: [main] }
  pull_request:    { branches: [main] }
  workflow_dispatch:
  schedule: [ { cron: '0 5 * * *' } ]

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      SUPABASE_SERVICE_KEY:  ${{ secrets.SUPABASE_SERVICE_KEY }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      DEEPSEEK_API_KEY:      ${{ secrets.DEEPSEEK_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm install -g pnpm@9

      - name: 📦 Install deps (regen lockfile)
        run: |
          pnpm config set registry https://registry.npmmirror.com/
          rm -f pnpm-lock.yaml
          pnpm install

      - name: 🛠️ Install Supabase CLI
        run: |
          # Tenta o download da CLI do Supabase com retry e verificação
          for i in {1..3}; do
            echo "Tentativa $i para baixar a CLI do Supabase"
            curl -fsSL --retry 3 --retry-delay 2 --retry-connrefused \
              https://github.com/supabase/cli/releases/download/v1.158.4/supabase_1.158.4_linux_amd64.deb \
              -o sb.deb
            
            # Verifica se o arquivo baixado é válido
            if dpkg-deb -I sb.deb &>/dev/null; then
              echo "Download concluído com sucesso, arquivo válido"
              sudo dpkg -i sb.deb
              break
            else
              echo "Arquivo baixado inválido, tentando novamente..."
              rm -f sb.deb
              # Se for a última tentativa, falha
              if [ $i -eq 3 ]; then
                echo "Falha ao baixar a CLI do Supabase após 3 tentativas"
                exit 1
              fi
              sleep 5
            fi
          done
          
          # Verifica se a CLI foi instalada corretamente
          supabase --version

      - name: 🔑 Login no Supabase
        run: supabase login --access-token "$SUPABASE_ACCESS_TOKEN"

      - name: 🧪 Executar validação de questões
        run: pnpm dlx ts-node scripts/validateQuestions.ts

      - if: always()
        uses: actions/upload-artifact@v4
        with:
          name: audit-log
          path: audit.log
          retention-days: 30