name: Validate Supabase Questions

on:
  push:            { branches: [main] }
  pull_request:    { branches: [main] }
  workflow_dispatch:
  schedule: [ { cron: '0 5 * * *' } ]

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      SUPABASE_SERVICE_KEY:  ${{ secrets.SUPABASE_SERVICE_KEY }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      DEEPSEEK_API_KEY:      ${{ secrets.DEEPSEEK_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm install -g pnpm@9

      - name: 📦 Install deps (regen lockfile)
        run: |
          pnpm config set registry https://registry.npmmirror.com/
          rm -f pnpm-lock.yaml
          pnpm install

      - name: 🛠️ Install Supabase CLI
        run: |
          # Usa método oficial de instalação para Linux
          curl -s https://raw.githubusercontent.com/supabase/cli/main/install.sh | bash
          
          # Adiciona ao PATH
          echo "$HOME/.supabase/bin" >> $GITHUB_PATH
          
          # Verifica se a CLI foi instalada corretamente
          supabase --version

      - name: 🔑 Login no Supabase
        run: supabase login --access-token "$SUPABASE_ACCESS_TOKEN"

      - name: 🧪 Executar validação de questões
        run: pnpm dlx ts-node scripts/validateQuestions.ts
        
      - name: 📝 Criar arquivo de log vazio se não existir
        if: always()
        run: touch audit.log

      - if: always()
        uses: actions/upload-artifact@v4
        with:
          name: audit-log
          path: audit.log
          retention-days: 30